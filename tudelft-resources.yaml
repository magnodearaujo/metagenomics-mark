AWSTemplateFormatVersion: '2010-09-09'
Description: Creates an S3 bucket

Resources:
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: tudelft-macro-resources

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EC2MacroLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess

  CountMacroFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CountMacroFunction
      Handler: index.process_count
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: tudelft-macro-resources
        S3Key: tudelft-resources.zip
      Timeout: 60

  CountMacroFunctionVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref CountMacroFunction
      Description: Version for CountMacroFunction

  CountMacroFunctionAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref CountMacroFunction
      FunctionVersion: !GetAtt CountMacroFunctionVersion.Version
      Name: CountMacroFunctionProductionVersion

  CountMacroFunctionInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt CountMacroFunction.Arn
      Principal: cloudformation.amazonaws.com
      SourceAccount: !Ref AWS::AccountId


Outputs:
  BucketName:
    Value: !Ref MyS3Bucket
    Description: The name of the created S3 bucket
